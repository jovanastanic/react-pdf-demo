import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Image,
} from "@react-pdf/renderer";

const styles = StyleSheet.create({
  page: {
    borderTopWidth: 30,
    borderTopColor: "red",
    borderTopStyle: "solid",
    padding: 30,
    flexDirection: "column",
    justifyContent: "flex-start",
    position: "relative",
    marginTop: 0,
    marginRight: 30,
    marginBottom: 0,
    marginLeft: 30,
  },
  pageBackground: {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "#f4f6f8",
    zIndex: -1,
  },
  header: {
    fontSize: 24,
    fontWeight: "bold",
    color: "#2e86de",
    marginBottom: 20,
    textAlign: "center",
  },
  table: {
    display: "table",
    width: "auto",
    borderWidth: 1,
    borderColor: "#ddd",
    borderStyle: "solid",
    borderRightWidth: 0,
    borderBottomWidth: 0,
    marginBottom: 20,
  },
  tableRow: {
    flexDirection: "row",
  },
  tableHeaderRow: {
    backgroundColor: "#2e86de",
  },
  tableHeaderCell: {
    flex: 1,
    padding: 8,
    fontSize: 12,
    color: "white",
    fontWeight: "bold",
    borderRightWidth: 1,
    borderBottomWidth: 1,
    borderColor: "#ddd",
    borderStyle: "solid",
  },
  tableCell: {
    flex: 1,
    padding: 8,
    fontSize: 12,
    borderRightWidth: 1,
    borderBottomWidth: 1,
    borderColor: "#ddd",
    borderStyle: "solid",
  },
  oddRow: {
    backgroundColor: "#f9fbfd",
  },
  evenRow: {
    backgroundColor: "#ffffff",
  },
  footer: {
    fontSize: 10,
    textAlign: "center",
    color: "#999",
    marginTop: 20,
    fontStyle: "italic",
  },
  pageNumber: {
    position: "absolute",
    fontSize: 10,
    bottom: 15,
    left: 0,
    right: 0,
    textAlign: "center",
    color: "#999",
  },
  image: {
    height: 50,
  },
});

const MyDocument = ({ data }) => (
  <Document>
    <Page size="A4" style={styles.page} wrap>
      <View style={styles.pageBackground} />

      <Text style={styles.header}>Employee List</Text>

      <View style={[styles.table, styles.tableHeaderRow, styles.tableRow]}>
        <Text style={styles.tableHeaderCell}>Name</Text>
        <Text style={styles.tableHeaderCell}>Role</Text>
        <Text style={styles.tableHeaderCell}>Gender</Text>
      </View>

      {data.map((emp, index) => (
        <View
          key={emp.id}
          style={[
            styles.tableRow,
            index % 2 === 0 ? styles.evenRow : styles.oddRow,
          ]}
        >
          <Text style={styles.tableCell}>
            <Image src={emp.image} style={styles.image} />
            {emp.name}
          </Text>
          <Text style={styles.tableCell}>{emp.role}</Text>
          <Text style={styles.tableCell}>{emp.gender}</Text>
        </View>
      ))}

      <Text style={styles.footer}>
        Generated by Your App on {new Date().toLocaleDateString()}
      </Text>

      <Text
        style={styles.pageNumber}
        render={({ pageNumber, totalPages }) =>
          `Page ${pageNumber} of ${totalPages}`
        }
      />
    </Page>
  </Document>
);

export default MyDocument;
